<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	<!-- 自动扫描 -->
	<!--<context:component-scan base-package="com.aboutcoder.ssm.persistence;" />-->
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="jdbc" />
	</bean>

	<!-- 数据源连接池配置方式（1）: 项目内方式 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}"/>
		<property name="maxActive" value="${maxActive}"/>
		<property name="maxIdle" value="${maxIdle}"/>
		<property name="minIdle" value="${minIdle}"/>
		<property name="maxWait" value="${maxWait}"/>
	</bean>

	<!-- 数据源连接池配置方式（2）: JNDI项目外方式 -->
	<!--<jee:jndi-lookup id="jndiDataSource" jndi-name="${jndiName}"-->
					 <!--proxy-interface="javax.sql.DataSource" lookup-on-startup="false"/>-->
	<!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">-->
		<!--<property name="jndiName">-->
			<!--<value>${jndiName}</value>-->
		<!--</property>-->
	<!--</bean>-->

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--<property name="typeAliasesPackage" value="com.aboutcoder.ssm.bean.po"/>-->
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath*:com/aboutcoder/ssm/persistence/*Mapper.xml"/>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.aboutcoder.ssm.persistence" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	<!--<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">-->
		<!--<constructor-arg index="0" ref="sqlSessionFactory" />-->
	<!--</bean>-->

	<!--<bean id="accountMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
		<!--<property name="mapperInterface" value="com.aboutcoder.ssm.persistence.GuideBasicMapper" />-->
		<!--<property name="sqlSessionFactory" ref="sqlSessionFactory" />-->
	<!--</bean>-->

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>